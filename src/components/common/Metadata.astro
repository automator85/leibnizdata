---
import { METADATA, SITE } from '~/config';
import type { MetaData } from '~/types';

export interface Props extends MetaData {
  dontUseTitleTemplate?: boolean;
}

const {
  title = METADATA.title.default,
  ignoreTitleTemplate = false,
  canonical = String(new URL(Astro.url.pathname, SITE.site)),
  robots = METADATA.robots,
  description = METADATA.description,
  openGraph = METADATA.openGraph,
  twitter = METADATA.twitter,
} = Astro.props;

const siteTitle = ignoreTitleTemplate ? title : METADATA.title.template.replace('%s', title);
---

<title>{siteTitle}</title>
<meta name="description" content={description} />
{canonical && <link rel="canonical" href={canonical} />}

{robots && <meta name="robots" content={Object.values(robots).join(',')} />}

{openGraph && (
  <>
    <meta property="og:title" content={siteTitle} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content={openGraph.type} />
    <meta property="og:url" content={canonical} />
    {openGraph.siteName && <meta property="og:site_name" content={openGraph.siteName} />}
    {openGraph.images &&
      openGraph.images.map((image) => (
        <>
          <meta property="og:image" content={image.url} />
          {image.width && <meta property="og:image:width" content={image.width.toString()} />}
          {image.height && <meta property="og:image:height" content={image.height.toString()} />}
        </>
      ))}
  </>
)}

{twitter && (
  <>
    <meta name="twitter:card" content={twitter.cardType} />
    {twitter.site && <meta name="twitter:site" content={twitter.site} />}
    {twitter.handle && <meta name="twitter:creator" content={twitter.handle} />}
  </>
)}

{SITE.googleSiteVerificationId && <meta name="google-site-verification" content={SITE.googleSiteVerificationId} />}
